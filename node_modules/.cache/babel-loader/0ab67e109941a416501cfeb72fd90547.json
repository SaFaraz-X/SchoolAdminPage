{"ast":null,"code":"var _jsxFileName = \"/Users/sauhilfaraz/Desktop/Launch Training/SchoolAdminPage/src/Components/Admin.js\";\nimport React from 'react';\nimport '../App.css';\nimport '../index.js';\nimport firebase from 'firebase';\nimport app from '../firebase'; // import DisplayData from './DisplayData.js';\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeAdmin = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmitAdmin = e => {\n      // I believe 'preventDefault()' allows our data to update\n      // once we click the 'submit' button without refreshing\n      // the whole web page\n      e.preventDefault(); // Here we are creating a new reference called \"teachers\"\n\n      const adminRef = firebase.database().ref('admins');\n      const admin = {\n        adminName: this.state.adminName,\n        adminPosition: this.state.adminPosition\n      };\n      adminRef.push(admin); // Set all of our key values back to empty values so we can\n      // input new values\n\n      this.setState({\n        adminName: '',\n        adminPosition: ''\n      });\n    };\n\n    this.adminData = app.database();\n    this.state = {\n      adminName: \"\",\n      adminPosition: \"\",\n      adminData: []\n    };\n    this.handleChangeAdmin = this.handleChangeAdmin.bind(this);\n    this.handleSubmitAdmin = this.handleSubmitAdmin.bind(this);\n  } // componentDidMount = () => {\n  //     const dataRef = firebase.database().ref('teachers');\n  //     dataRef.on('value', (snapshot) => {\n  //         let elements = snapshot.val();\n  //         let newState = [];\n  //         for(let element in elements) {\n  //             newState.push({\n  //                 id: element,\n  //                 name: elements[element].name,\n  //                 age: elements[element].age,\n  //                 grade: elements[element].grade,\n  //                 gender: elements[element].gender\n  //             });\n  //         }\n  //         this.setState({\n  //             elements: newState\n  //         });\n  //     });\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AdminMain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"add-item-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmitAdmin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"adminName\",\n      placeholder: \"Admin Name\",\n      onChange: this.handleChangeAdmin,\n      value: this.state.adminName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"adminPosition\",\n      placeholder: \"Admin Position\",\n      onChange: this.handleChangeAdmin,\n      value: this.state.adminPosition,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Add Admin Info\"))));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/sauhilfaraz/Desktop/Launch Training/SchoolAdminPage/src/Components/Admin.js"],"names":["React","firebase","app","Admin","Component","constructor","props","handleChangeAdmin","e","setState","target","name","value","handleSubmitAdmin","preventDefault","adminRef","database","ref","admin","adminName","state","adminPosition","push","adminData","bind","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,GAAP,MAAiB,aAAjB,C,CACA;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAmClBC,iBAnCkB,GAmCGC,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADd,OAAd;AAGD,KAvCe;;AAAA,SAyChBC,iBAzCgB,GAyCKL,CAAD,IAAO;AACvB;AACA;AACA;AACFA,MAAAA,CAAC,CAACM,cAAF,GAJyB,CAKzB;;AACA,YAAMC,QAAQ,GAAGd,QAAQ,CAACe,QAAT,GAAoBC,GAApB,CAAwB,QAAxB,CAAjB;AACA,YAAMC,KAAK,GAAG;AAEZC,QAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SAFV;AAGZE,QAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC;AAHd,OAAd;AAMAN,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,KAAd,EAbyB,CAczB;AACA;;AACA,WAAKT,QAAL,CAAc;AACZU,QAAAA,SAAS,EAAE,EADC;AAEZE,QAAAA,aAAa,EAAE;AAFH,OAAd;AAID,KA7De;;AAGd,SAAKE,SAAL,GAAiBrB,GAAG,CAACc,QAAJ,EAAjB;AAEA,SAAKI,KAAL,GAAa;AACTD,MAAAA,SAAS,EAAE,EADF;AAETE,MAAAA,aAAa,EAAE,EAFN;AAGTE,MAAAA,SAAS,EAAE;AAHF,KAAb;AAMA,SAAKhB,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBiB,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKX,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBW,IAAvB,CAA4B,IAA5B,CAAzB;AACH,GAd+B,CAgBhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA+BAC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAS,MAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAM,MAAA,QAAQ,EAAE,KAAKZ,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,WAAxB;AAAoC,MAAA,WAAW,EAAC,YAAhD;AAA6D,MAAA,QAAQ,EAAE,KAAKN,iBAA5E;AAA+F,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWD,SAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,eAAxB;AAAwC,MAAA,WAAW,EAAC,gBAApD;AAAqE,MAAA,QAAQ,EAAE,KAAKZ,iBAApF;AAAuG,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWC,aAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,CAFA,CADA,CADJ;AAkBH;;AApF+B;;AAuFpC,eAAelB,KAAf","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport '../index.js'\nimport firebase from 'firebase';\nimport app  from '../firebase';\n// import DisplayData from './DisplayData.js';\n\nclass Admin extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.adminData = app.database();\n\n        this.state = {\n            adminName: \"\",\n            adminPosition: \"\",\n            adminData: []\n        }\n\n        this.handleChangeAdmin = this.handleChangeAdmin.bind(this);\n        this.handleSubmitAdmin = this.handleSubmitAdmin.bind(this);\n    }\n\n    // componentDidMount = () => {\n    //     const dataRef = firebase.database().ref('teachers');\n    //     dataRef.on('value', (snapshot) => {\n    //         let elements = snapshot.val();\n    //         let newState = [];\n    //         for(let element in elements) {\n    //             newState.push({\n    //                 id: element,\n    //                 name: elements[element].name,\n    //                 age: elements[element].age,\n    //                 grade: elements[element].grade,\n    //                 gender: elements[element].gender\n    //             });\n    //         }\n    //         this.setState({\n    //             elements: newState\n    //         });\n    //     });\n    // }\n\n    handleChangeAdmin = (e) => {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      }\n\n      handleSubmitAdmin = (e) => {\n          // I believe 'preventDefault()' allows our data to update\n          // once we click the 'submit' button without refreshing\n          // the whole web page\n        e.preventDefault();\n        // Here we are creating a new reference called \"teachers\"\n        const adminRef = firebase.database().ref('admins');\n        const admin = {\n\n          adminName: this.state.adminName,\n          adminPosition: this.state.adminPosition,\n        }\n\n        adminRef.push(admin);\n        // Set all of our key values back to empty values so we can\n        // input new values\n        this.setState({\n          adminName: '',\n          adminPosition: '',\n        });\n      }\n\n      \n    render(){            \n        return(\n            <div className=\"AdminMain\"> \n            <section className=\"add-item-main\">\n\n            <form onSubmit={this.handleSubmitAdmin}>\n                <input type=\"text\" name=\"adminName\" placeholder=\"Admin Name\" onChange={this.handleChangeAdmin} value={this.state.adminName} />\n                <input type=\"text\" name=\"adminPosition\" placeholder=\"Admin Position\" onChange={this.handleChangeAdmin} value={this.state.adminPosition} />\n                <button>Add Admin Info</button>\n            </form>\n\n            </section>\n\n            {/* <DisplayData dataVal = {this.state.elements}/> */}\n            </div>\n\n\n        )\n\n    }\n}\n\nexport default Admin;"]},"metadata":{},"sourceType":"module"}