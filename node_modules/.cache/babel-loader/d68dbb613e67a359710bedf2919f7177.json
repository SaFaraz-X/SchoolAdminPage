{"ast":null,"code":"var _jsxFileName = \"/Users/sauhilfaraz/Desktop/Launch Training/SchoolAdminPage/src/App.js\";\n// import React from 'react';\n// import './App.css';\n// import './index.js'\n// import firebase from 'firebase';\n// // import firebaseConfig from './firebase.js';\n// import app  from './firebase';\n// import Student from './Student.js';\nimport React from 'react';\nimport './App.css';\nimport './index.js';\nimport firebase from 'firebase'; // import firebaseConfig from './firebase.js';\n\nimport app from './firebase';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.inputStudent = e => {\n      let studentVal = e.target.value;\n      this.setState({\n        student: studentVal[{\n          age: \"\",\n          gender: \"\"\n        }]\n      });\n    };\n\n    this.inputAge = e => {\n      let studentAge = e.target.value;\n      this.setState({\n        student: [{\n          age: studentAge\n        }]\n      });\n    };\n\n    this.inputGender = e => {\n      let studentGender = e.target.value;\n      this.setState({\n        student: [{\n          gender: studentGender\n        }]\n      });\n    };\n\n    this.addStudent = e => {\n      let newStudent = this.state.student;\n\n      if (newStudent !== \"\" && newStudent.age !== \"\" && newStudent.gender != \"\") {\n        this.schoolClass.push(this.state.student);\n        this.setState({\n          student: \"\"[{\n            age: \"\",\n            gender: \"\"\n          }]\n        });\n      }\n    };\n\n    this.schoolClass = app.database().ref('classes').child(\"c1/students\");\n    this.state = {\n      studentList: [],\n      student: \"\"[{\n        age: \"\",\n        gender: \"\"\n      }]\n    };\n    this.inputStudent = this.inputStudent.bind(this);\n    this.inputAge = this.inputAge.bind(this);\n    this.inputGender = this.inputGender.bind(this);\n    this.addStudent = this.addStudent.bind(this);\n  } // Input the student's information in the textbox\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"StudentMain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"textArea\",\n      value: this.state.student,\n      onChange: e => this.inputStudent(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"textArea\",\n      value: this.state.student.age,\n      onChange: e => this.inputAge(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"textArea\",\n      value: this.state.student.gender,\n      onChange: e => this.inputGender(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.addStudent(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Add Student\"));\n  }\n\n}\n\nexport default App; // class App extends React.Component{\n//   constructor(props){\n//     super(props);\n//     // Get class data here\n//     this.schoolClass = app.database().ref('classes').child(\"c1/students/Sa Faraz\");\n//     // this.something = this.schoolClass.child(\"students\");\n//     // this.schoolClassData = this.schoolClass.child(\"c1\");\n//     // Get teacher data here (see which teacher teaches which class)\n//     // this.teacher = this.schoolClassData.child('name');\n//     // Get adminstration data here\n//     this.admin = app.database().ref(\"admin\").child('name');\n//     this.state = {\n//         class: \"\",\n//         admin: \"\",\n//         student: \"\",\n//         teacher: \"\",\n//         students:[{\n//           age: \"\",\n//           gender: \"\"\n//         }]\n//     }\n//   }\n//   // https://firebase.googleblog.com/2014/04/best-practices-arrays-in-firebase.html\n//   // how to render multiple values from firebase\n//   // https://stackoverflow.com/questions/40861232/how-to-retrieve-multiple-values-in-firebase-database\n//   componentDidMount = (snap) => {\n//     this.schoolClass.once(\"value\", snap => {\n//       this.schoolClass = app.database().ref('classes').child(\"c1/students/Sa Faraz\")\n//       .once(\"value\")\n//       .then(itemFiltered => console.log('Your item', itemFiltered));\n//       this.setState({\n//         students:[{\n//           age: snap.val(),\n//           gender: snap.val()\n//         }]\n//         // teacher: snap.val(),\n//         // student: snap.val()\n//         // people:{\n//         //   admin: snap.val(),\n//         //   student: snap.val(),\n//         //   teacher: snap.val()\n//         // }\n//       });\n//     });\n//   }\n//   // addClass = (e) => {\n//   // }\n//   // addTeacher = (e) => {\n//   // }\n//   // addAdmin = (e) => {\n//   // }\n//   // addStudent = (e) => {\n//   // }\n//   // favouritesFire.once(\"value\", snapshot => {\n//   //   snapshot.map(item => { // it will pass through all your snapshot items\n//   //     firebase.database().ref(`yournode/${item.key}`) //for each item you must query again in firebase\n//   //     .once('value')\n//   //     .then(itemFiltered => console.log('Your item: ', itemFiltered); // then you get your result\n//   //   })\n//   // })\n//   render(){\n//     return(\n//       <div>\n//         <p> \n//           {/* {this.state.students} */}\n//           <Student \n//           student={this.state.student}/>\n//         </p>\n//       </div>\n//     )\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["/Users/sauhilfaraz/Desktop/Launch Training/SchoolAdminPage/src/App.js"],"names":["React","firebase","app","App","Component","constructor","props","inputStudent","e","studentVal","target","value","setState","student","age","gender","inputAge","studentAge","inputGender","studentGender","addStudent","newStudent","state","schoolClass","push","database","ref","child","studentList","bind","render"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import './App.css';\n// import './index.js'\n// import firebase from 'firebase';\n// // import firebaseConfig from './firebase.js';\n// import app  from './firebase';\n// import Student from './Student.js';\n\n\nimport React from 'react';\nimport './App.css';\nimport './index.js'\nimport firebase from 'firebase';\n// import firebaseConfig from './firebase.js';\nimport app  from './firebase';\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.schoolClass = app.database().ref('classes').child(\"c1/students\");\n        this.state = {\n            studentList: [],\n            student: \"\" [{\n                age: \"\",\n                gender: \"\"\n            }]\n        }\n\n        this.inputStudent = this.inputStudent.bind(this);\n        this.inputAge = this.inputAge.bind(this);\n        this.inputGender = this.inputGender.bind(this);\n        this.addStudent = this.addStudent.bind(this);\n    }\n\n    // Input the student's information in the textbox\n    inputStudent = (e) => {\n        let studentVal = e.target.value;\n        this.setState({\n            student: studentVal [{\n              age: \"\",\n              gender: \"\"\n            }]\n        })\n    }\n\n    inputAge = (e) => {\n        let studentAge = e.target.value;\n        this.setState({\n            student: [{\n                age: studentAge\n            }]\n        })\n    }\n    inputGender = (e) => {\n        let studentGender = e.target.value;\n        this.setState({\n            student: [{\n                gender: studentGender\n            }]\n        })\n    }\n\n    // Add the student's information to the database\n    addStudent = (e) => {\n        let newStudent = this.state.student;\n        if(newStudent !== \"\" && newStudent.age !== \"\" && newStudent.gender != \"\"){\n            this.schoolClass.push(this.state.student);\n            this.setState({\n                student: \"\" [{\n                    age: \"\",\n                    gender: \"\"\n                }]\n            })\n        }\n\n    }\n\n    render(){\n        return(\n            <div className=\"StudentMain\"> \n\n                <input type=\"text\" id=\"textArea\" value={this.state.student}  onChange={e=>this.inputStudent(e)}> \n                </input>\n\n                <input type=\"text\" id=\"textArea\" value={this.state.student.age}  onChange={e=>this.inputAge(e)}> \n                </input>\n\n                <input type=\"text\" id=\"textArea\" value={this.state.student.gender}  onChange={e=>this.inputGender(e)}> \n                </input>\n\n                <button type=\"submit\" onClick={()=>this.addStudent()}>\n                    Add Student\n                </button>\n\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n\n// class App extends React.Component{\n//   constructor(props){\n//     super(props);\n\n//     // Get class data here\n//     this.schoolClass = app.database().ref('classes').child(\"c1/students/Sa Faraz\");\n\n//     // this.something = this.schoolClass.child(\"students\");\n//     // this.schoolClassData = this.schoolClass.child(\"c1\");\n\n//     // Get teacher data here (see which teacher teaches which class)\n//     // this.teacher = this.schoolClassData.child('name');\n\n//     // Get adminstration data here\n//     this.admin = app.database().ref(\"admin\").child('name');\n    \n//     this.state = {\n//         class: \"\",\n//         admin: \"\",\n//         student: \"\",\n//         teacher: \"\",\n//         students:[{\n//           age: \"\",\n//           gender: \"\"\n//         }]\n\n//     }\n//   }\n\n//   // https://firebase.googleblog.com/2014/04/best-practices-arrays-in-firebase.html\n//   // how to render multiple values from firebase\n//   // https://stackoverflow.com/questions/40861232/how-to-retrieve-multiple-values-in-firebase-database\n  \n//   componentDidMount = (snap) => {\n//     this.schoolClass.once(\"value\", snap => {\n//       this.schoolClass = app.database().ref('classes').child(\"c1/students/Sa Faraz\")\n//       .once(\"value\")\n//       .then(itemFiltered => console.log('Your item', itemFiltered));\n\n//       this.setState({\n//         students:[{\n//           age: snap.val(),\n//           gender: snap.val()\n//         }]\n//         // teacher: snap.val(),\n//         // student: snap.val()\n\n//         // people:{\n//         //   admin: snap.val(),\n//         //   student: snap.val(),\n//         //   teacher: snap.val()\n//         // }\n//       });\n//     });\n//   }\n\n//   // addClass = (e) => {\n\n//   // }\n\n//   // addTeacher = (e) => {\n\n//   // }\n\n//   // addAdmin = (e) => {\n\n//   // }\n\n//   // addStudent = (e) => {\n\n//   // }\n\n\n//   // favouritesFire.once(\"value\", snapshot => {\n//   //   snapshot.map(item => { // it will pass through all your snapshot items\n//   //     firebase.database().ref(`yournode/${item.key}`) //for each item you must query again in firebase\n//   //     .once('value')\n//   //     .then(itemFiltered => console.log('Your item: ', itemFiltered); // then you get your result\n//   //   })\n//   // })\n\n//   render(){\n//     return(\n//       <div>\n//         <p> \n//           {/* {this.state.students} */}\n//           <Student \n//           student={this.state.student}/>\n//         </p>\n//       </div>\n//     )\n//   }\n// }\n\n\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}