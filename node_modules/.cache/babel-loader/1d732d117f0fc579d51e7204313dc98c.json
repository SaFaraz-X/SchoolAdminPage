{"ast":null,"code":"var _jsxFileName = \"/Users/sauhilfaraz/Desktop/Launch Training/SchoolAdminPage/src/Components/Teacher.js\";\nimport React from 'react';\nimport '../App.css';\nimport '../index.js';\nimport firebase from 'firebase';\nimport app from '../firebase'; // import DisplayData from './DisplayData.js';\n\nclass Teacher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeTeacher = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmitTeacher = e => {\n      // I believe 'preventDefault()' allows our data to update\n      // once we click the 'submit' button without refreshing\n      // the whole web page\n      e.preventDefault(); // Here we are creating a new reference called \"teachers\"\n\n      const teacherRef = firebase.database().ref('teachers');\n      const teacher = {\n        name: this.state.name,\n        class: this.state.class\n      };\n      teacherRef.push(teacher); // Set all of our key values back to empty values so we can\n      // input new values\n\n      this.setState({\n        name: '',\n        class: ''\n      });\n      teacherRef.on('value', snapshot => {\n        console.log(\"hi\");\n        console.log(snapshot.val());\n      });\n    };\n\n    this.teacherData = app.database();\n    this.state = {\n      name: \"\",\n      class: \"\",\n      items: []\n    };\n    this.handleChangeTeacher = this.handleChangeTeacher.bind(this);\n    this.handleSubmitTeacher = this.handleSubmitTeacher.bind(this);\n  } // componentDidMount = () => {\n  //     const dataRef = firebase.database().ref('teachers');\n  //     dataRef.on('value', (snapshot) => {\n  //         let elements = snapshot.val();\n  //         let newState = [];\n  //         for(let element in elements) {\n  //             newState.push({\n  //                 id: element,\n  //                 name: elements[element].name,\n  //                 age: elements[element].age,\n  //                 grade: elements[element].grade,\n  //                 gender: elements[element].gender\n  //             });\n  //         }\n  //         this.setState({\n  //             elements: newState\n  //         });\n  //     });\n  // }\n\n\n  componentDidMount() {\n    const itemsRef = firebase.database().ref('teachers');\n    itemsRef.on('value', snapshot => {\n      let items = snapshot.val();\n      let newState = [];\n\n      for (let item in items) {\n        newState.push({\n          id: item,\n          name: items[item].name,\n          class: items[item].class\n        });\n      }\n\n      this.setState({\n        items: newState\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TeacherMain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"add-item-teacher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmitTeacher,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Teacher Name\",\n      onChange: this.handleChangeTeacher,\n      value: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"class\",\n      placeholder: \"Teacher's Classroom Number\",\n      onChange: this.handleChangeTeacher,\n      value: this.state.class,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Add Teacher Info\"))), this.componentDidMount);\n  }\n\n}\n\nexport default Teacher;","map":{"version":3,"sources":["/Users/sauhilfaraz/Desktop/Launch Training/SchoolAdminPage/src/Components/Teacher.js"],"names":["React","firebase","app","Teacher","Component","constructor","props","handleChangeTeacher","e","setState","target","name","value","handleSubmitTeacher","preventDefault","teacherRef","database","ref","teacher","state","class","push","on","snapshot","console","log","val","teacherData","items","bind","componentDidMount","itemsRef","newState","item","id","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport '../index.js'\nimport firebase from 'firebase';\nimport app  from '../firebase';\n// import DisplayData from './DisplayData.js';\n\nclass Teacher extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.teacherData = app.database();\n\n        this.state = {\n            name: \"\",\n            class: \"\",\n            items: []\n        }\n\n        this.handleChangeTeacher = this.handleChangeTeacher.bind(this);\n        this.handleSubmitTeacher = this.handleSubmitTeacher.bind(this);\n    }\n\n    // componentDidMount = () => {\n    //     const dataRef = firebase.database().ref('teachers');\n    //     dataRef.on('value', (snapshot) => {\n    //         let elements = snapshot.val();\n    //         let newState = [];\n    //         for(let element in elements) {\n    //             newState.push({\n    //                 id: element,\n    //                 name: elements[element].name,\n    //                 age: elements[element].age,\n    //                 grade: elements[element].grade,\n    //                 gender: elements[element].gender\n    //             });\n    //         }\n    //         this.setState({\n    //             elements: newState\n    //         });\n    //     });\n    // }\n\n    componentDidMount() {\n        const itemsRef = firebase.database().ref('teachers');\n        itemsRef.on('value', (snapshot) => {\n          let items = snapshot.val();\n          let newState = [];\n          for (let item in items) {\n            newState.push({\n              id: item,\n              name: items[item].name,\n              class: items[item].class\n            });\n          }\n          this.setState({\n            items: newState\n          });\n        });\n      }\n\n    handleChangeTeacher = (e) => {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      }\n\n      handleSubmitTeacher = (e) => {\n          // I believe 'preventDefault()' allows our data to update\n          // once we click the 'submit' button without refreshing\n          // the whole web page\n        e.preventDefault();\n        // Here we are creating a new reference called \"teachers\"\n        const teacherRef = firebase.database().ref('teachers');\n        const teacher = {\n\n          name: this.state.name,\n          class: this.state.class,\n        }\n\n        teacherRef.push(teacher);\n        // Set all of our key values back to empty values so we can\n        // input new values\n        this.setState({\n          name: '',\n          class: '',\n        });\n\n        teacherRef.on('value', (snapshot) => {\n            console.log(\"hi\");\n            console.log(snapshot.val());\n          });\n      }\n\n      \n    render(){            \n        return(\n            <div className=\"TeacherMain\"> \n            <section className=\"add-item-teacher\">\n\n            <form onSubmit={this.handleSubmitTeacher}>\n                <input type=\"text\" name=\"name\" placeholder=\"Teacher Name\" onChange={this.handleChangeTeacher} value={this.state.name} />\n                <input type=\"text\" name=\"class\" placeholder=\"Teacher's Classroom Number\" onChange={this.handleChangeTeacher} value={this.state.class} />\n                <button>Add Teacher Info</button>\n            </form>\n\n            </section>\n\n            {this.componentDidMount}\n\n            {/* <DisplayData dataVal = {this.state.elements}/> */}\n            </div>\n\n\n        )\n\n    }\n}\n\nexport default Teacher;"]},"metadata":{},"sourceType":"module"}