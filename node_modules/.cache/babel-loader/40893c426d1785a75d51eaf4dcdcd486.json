{"ast":null,"code":"var _jsxFileName = \"/Users/sauhilfaraz/Desktop/Launch Training/SchoolAdminPage/src/Components/Teacher.js\";\nimport React from 'react';\nimport '../App.css';\nimport '../index.js';\nimport firebase from 'firebase';\nimport app from '../firebase'; // import DisplayData from './DisplayData.js';\n\nclass Teacher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeTeacher = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmitTeacher = e => {\n      // I believe 'preventDefault()' allows our data to update\n      // once we click the 'submit' button without refreshing\n      // the whole web page\n      e.preventDefault(); // Here we are creating a new reference called \"students\"\n\n      const teacherRef = firebase.database().ref('teachers');\n      const teacher = {\n        teacherName: this.state.teacherName,\n        teacherClass: this.state.teacherClass\n      };\n      teacherRef.push(teacher); // Set all of our key values back to empty values so we can\n      // input new values\n\n      this.setState({\n        teacherName: '',\n        teacherClass: ''\n      });\n    };\n\n    this.classData = app.database();\n    this.state = {\n      teacherName: \"\",\n      teacherClass: \"\",\n      teacherData: []\n    };\n    this.handleChangeTeacher = this.handleChangeTeacher.bind(this);\n    this.handleSubmitTeacher = this.handleSubmitTeacher.bind(this);\n  } // componentDidMount = () => {\n  //     const dataRef = firebase.database().ref('teachers');\n  //     dataRef.on('value', (snapshot) => {\n  //         let elements = snapshot.val();\n  //         let newState = [];\n  //         for(let element in elements) {\n  //             newState.push({\n  //                 id: element,\n  //                 name: elements[element].name,\n  //                 age: elements[element].age,\n  //                 grade: elements[element].grade,\n  //                 gender: elements[element].gender\n  //             });\n  //         }\n  //         this.setState({\n  //             elements: newState\n  //         });\n  //     });\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TeacherMain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"add-item-teacher\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Teacher Name\",\n      onChange: this.handleChangeTeacher,\n      value: this.state.teacherName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"class\",\n      placeholder: \"Teacher's Classroom Number\",\n      onChange: this.handleChangeTeacher,\n      value: this.state.teacherName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"Add Item\"))));\n  }\n\n}\n\nexport default Teacher;","map":{"version":3,"sources":["/Users/sauhilfaraz/Desktop/Launch Training/SchoolAdminPage/src/Components/Teacher.js"],"names":["React","firebase","app","Teacher","Component","constructor","props","handleChangeTeacher","e","setState","target","name","value","handleSubmitTeacher","preventDefault","teacherRef","database","ref","teacher","teacherName","state","teacherClass","push","classData","teacherData","bind","render","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,GAAP,MAAiB,aAAjB,C,CACA;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAmClBC,mBAnCkB,GAmCKC,CAAD,IAAO;AACzB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADd,OAAd;AAGD,KAvCe;;AAAA,SAyChBC,mBAzCgB,GAyCOL,CAAD,IAAO;AACzB;AACA;AACA;AACFA,MAAAA,CAAC,CAACM,cAAF,GAJ2B,CAK3B;;AACA,YAAMC,UAAU,GAAGd,QAAQ,CAACe,QAAT,GAAoBC,GAApB,CAAwB,UAAxB,CAAnB;AACA,YAAMC,OAAO,GAAG;AAEdC,QAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWD,WAFV;AAGdE,QAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC;AAHX,OAAhB;AAMAN,MAAAA,UAAU,CAACO,IAAX,CAAgBJ,OAAhB,EAb2B,CAc3B;AACA;;AACA,WAAKT,QAAL,CAAc;AACZU,QAAAA,WAAW,EAAE,EADD;AAEZE,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID,KA7De;;AAGd,SAAKE,SAAL,GAAiBrB,GAAG,CAACc,QAAJ,EAAjB;AAEA,SAAKI,KAAL,GAAa;AACTD,MAAAA,WAAW,EAAE,EADJ;AAETE,MAAAA,YAAY,EAAE,EAFL;AAGTG,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAMA,SAAKjB,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBkB,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKZ,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBY,IAAzB,CAA8B,IAA9B,CAA3B;AACH,GAdiC,CAgBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA+BAC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAS,MAAA,SAAS,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,WAAW,EAAC,cAA3C;AAA0D,MAAA,QAAQ,EAAE,KAAKpB,mBAAzE;AAA8F,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWD,WAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,WAAW,EAAC,4BAA5C;AAAyE,MAAA,QAAQ,EAAE,KAAKZ,mBAAxF;AAA6G,MAAA,KAAK,EAAE,KAAKa,KAAL,CAAWD,WAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CAFA,CADA,CADJ;AAkBH;;AApFiC;;AAuFtC,eAAehB,OAAf","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport '../index.js'\nimport firebase from 'firebase';\nimport app  from '../firebase';\n// import DisplayData from './DisplayData.js';\n\nclass Teacher extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.classData = app.database();\n\n        this.state = {\n            teacherName: \"\",\n            teacherClass: \"\",\n            teacherData: []\n        }\n\n        this.handleChangeTeacher = this.handleChangeTeacher.bind(this);\n        this.handleSubmitTeacher = this.handleSubmitTeacher.bind(this);\n    }\n\n    // componentDidMount = () => {\n    //     const dataRef = firebase.database().ref('teachers');\n    //     dataRef.on('value', (snapshot) => {\n    //         let elements = snapshot.val();\n    //         let newState = [];\n    //         for(let element in elements) {\n    //             newState.push({\n    //                 id: element,\n    //                 name: elements[element].name,\n    //                 age: elements[element].age,\n    //                 grade: elements[element].grade,\n    //                 gender: elements[element].gender\n    //             });\n    //         }\n    //         this.setState({\n    //             elements: newState\n    //         });\n    //     });\n    // }\n\n    handleChangeTeacher = (e) => {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      }\n\n      handleSubmitTeacher = (e) => {\n          // I believe 'preventDefault()' allows our data to update\n          // once we click the 'submit' button without refreshing\n          // the whole web page\n        e.preventDefault();\n        // Here we are creating a new reference called \"students\"\n        const teacherRef = firebase.database().ref('teachers');\n        const teacher = {\n\n          teacherName: this.state.teacherName,\n          teacherClass: this.state.teacherClass,\n        }\n\n        teacherRef.push(teacher);\n        // Set all of our key values back to empty values so we can\n        // input new values\n        this.setState({\n          teacherName: '',\n          teacherClass: '',\n        });\n      }\n\n      \n    render(){            \n        return(\n            <div className=\"TeacherMain\"> \n            <section className=\"add-item-teacher\">\n\n            <form onSubmit={this.handleSubmit}>\n                <input type=\"text\" name=\"name\" placeholder=\"Teacher Name\" onChange={this.handleChangeTeacher} value={this.state.teacherName} />\n                <input type=\"text\" name=\"class\" placeholder=\"Teacher's Classroom Number\" onChange={this.handleChangeTeacher} value={this.state.teacherName} />\n                <button>Add Item</button>\n            </form>\n\n            </section>\n\n            {/* <DisplayData dataVal = {this.state.elements}/> */}\n            </div>\n\n\n        )\n\n    }\n}\n\nexport default Teacher;"]},"metadata":{},"sourceType":"module"}